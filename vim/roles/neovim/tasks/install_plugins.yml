---
- name: Add vim icon plugin
  lineinfile:
    path: "{{ vimrc_path }}"
    line: "\n\n{{ item }}"
    insertafter: 'call plug#begin.*'
  with_file:
    - "files/vim_icon_plugin.yml"
  when: enable_vim_icon_plugin|bool == True


- name: Add find files plugin
  lineinfile:
    path: "{{ vimrc_path }}"
    line: "\n\n{{ item }}"
    insertafter: 'call plug#begin.*'
  with_file:
    - "files/find_files.yml"
  when: enable_find_files_plugin|bool == True


- name: Add auto pair bracket plugin
  lineinfile:
    path: "{{ vimrc_path }}"
    line: "\n\n{{ item }}"
    insertafter: 'call plug#begin.*'
  with_file:
    - "files/auto_pair_bracket_plugin.yml"
  when: enable_auto_pair_bracket_plugin|bool == True


- name: Add toc bar plugin
  lineinfile:
    path: "{{ vimrc_path }}"
    line: "\n\n{{ item }}"
    insertafter: 'call plug#begin.*'
  with_file:
    - "files/toc_bar.yml"
  when: enable_toc_bar_plugin|bool == True


- name: Add status bar plugin
  lineinfile:
    path: "{{ vimrc_path }}"
    line: "\n\n{{ item }}"
    insertafter: 'call plug#begin.*'
  with_file:
    - "files/status_bar_plugin.yml"
  when: enable_status_bar_plugin|bool == True


- name: Add code Comment plugin
  lineinfile:
    path: "{{ vimrc_path }}"
    line: "\n\n{{ item }}"
    insertafter: 'call plug#begin.*'
  with_file:
    - "files/code_comment_plugin.yml"
  when: enable_code_comment_plugin|bool == True


- name: Add fold code plugin
  lineinfile:
    path: "{{ vimrc_path }}"
    line: "\n\n{{ item }}"
    insertafter: 'call plug#begin.*'
  with_file:
    - "files/fold_code_plugin.yml"
  when: enable_fold_code_plugin|bool == True


- name: Add easy align plugin
  lineinfile:
    path: "{{ vimrc_path }}"
    line: "\n\n{{ item }}"
    insertafter: 'call plug#begin.*'
  with_file:
    - "files/easy_align_plugin.yml"
  when: enable_easy_align_plugin|bool == True


- name: Install Tag bar plugin
  block:
    - name: Install ctag for the plugin
      become: yes
      apt:
        name: ctags 
        state: latest
        update_cache: yes

    - name: Add tag bar plugin
      lineinfile:
        path: "{{ vimrc_path }}"
        line: "\n\n{{ item }}"
        insertafter: 'call plug#begin.*'
      with_file:
        - "files/tag_bar_plugin.yml"
  when: enable_tag_bar_plugin|bool == True


- name: Install vim plugins
  shell: 'nvim "+silent! PlugInstall!" +qall!'


- name: Prepare install auto complete plugin
  block:
    - name: Check if node is installed
      command: node -v
      register: node_result
      ignore_errors: True

    - name: Print Error message 
      debug:
        msg: "Failed - Node is not installed\nSkip installed step for auto complete plugin"
      when: node_result is failed

  when: enable_auto_completion_plugin|bool == True


- name: Install auto complete plugin
  block:
    - name: Add auto complete plugin
      lineinfile:
        path: "{{ vimrc_path }}"
        line: "\n\n{{ item }}"
        insertafter: 'call plug#begin.*'
      with_file:
        - "files/coc_nvim_plugin.yml"

    - name: Install vim plugins
      shell: 'nvim "+silent! PlugInstall!" +qall!'

    - name: Create coc extensions
      file:
        path: "{{ auto_complete_extensions_path }}"
        state: directory

    - name: Create package.json for coc extensions
      copy:
        dest: "{{ auto_complete_extensions_path }}/package.json"
        content: '{"dependencies":{}}'

    - name: Install coc extensions
      shell: 'npm install \
          coc-snippets \
          coc-tsserver \
          coc-html \
          coc-css \
          coc-json \
          coc-yaml \
          coc-explorer \
          coc-diagnostic \
          coc-go \
          coc-highlight \
          coc-just-complete \
          coc-markdownlint \
          coc-pyright \
          coc-sh \
          --global-style --ignore-scripts --no-bin-links --no-package-lock --only=prod'
      args:
        chdir: "{{ auto_complete_extensions_path }}"

  when: enable_auto_completion_plugin|bool == True and node_result is success


